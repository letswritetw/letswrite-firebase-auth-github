"use strict";var providerGithub=new firebase.auth.GithubAuthProvider,github=document.getElementById("github"),githubCode=document.getElementById("githubCode"),githubError=document.getElementById("githubError");function openOut(){document.getElementById("out").classList.remove("d-none")}function signOut(){document.getElementById("signOut").addEventListener("click",(function(){firebase.auth().signOut().then((function(){window.alert("登出成功，將重新整理一次頁面！"),window.location.reload()})).catch((function(e){document.getElementById("userError").innerHTML=JSON.stringify(e)}))}))}function deleteUser(){var e=firebase.auth().currentUser;null!==e?document.getElementById("deleteUser").addEventListener("click",(function(){e.delete().then((function(){window.alert("刪除成功，將重新整理一次頁面！"),window.location.reload()})).catch((function(e){document.getElementById("userError").innerHTML=JSON.stringify(e)}))})):document.getElementById("userError").innerHTML="請重新登入會員，再執行刪除功能"}github.addEventListener("click",(function(){for(var e,t=document.getElementsByName("githubType"),n=t.length,i=0;i<n;i++)if(t[i].checked){e=t[i].value;break}"popup"===e?firebase.auth().signInWithPopup(providerGithub).then((function(e){e.credential.accessToken;var t=e.user;console.log("🚀 ~ file: main.js ~ line 70 ~ .then ~ user",t),githubCode.innerHTML=JSON.stringify(t),openOut(),signOut(),deleteUser()})).catch((function(e){e.code,e.message,e.email,e.credential;githubError.innerHTML=JSON.stringify(e)})):"redirect"===e&&firebase.auth().signInWithRedirect(providerGithub)})),document.addEventListener("DOMContentLoaded",(function(){firebase.auth().getRedirectResult().then((function(e){if(e.credential)e.credential.accessToken;var t=e.user;t&&(githubCode.innerHTML=JSON.stringify(t),openOut(),signOut(),deleteUser())})).catch((function(e){e.code,e.message,e.email,e.credential;githubError.innerHTML=JSON.stringify(e)}))}));